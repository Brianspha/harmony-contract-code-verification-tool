const { program } = require("commander");
const { version } = require("../../../package.json");
var fs = require("fs");
const colors = require("colors");
const ora = require("ora");

program
  .version(version)
  .command(
    "verify",
    "verifies if the given contract address byte code matches that generated by the tool"
  )
  .requiredOption(
    "-ca <address>,--contract-address <address>",
    "Specify contract address on HarmonyOne"
  )
  .requiredOption(
    "-sv <version>,--solc-version <version>",
    "Specify Solidity Version"
  )
  .requiredOption("-ru <url>,--repo-url <url>", "Specify Github url link")
  .requiredOption(
    "-c <chain-id>,--chain <chain-id>",
    "Specify Chain i.e. Testnet etc"
  )
  .alias("v")
  .action(async (args, options) => {
    if (args) {
      const verify = require("../verify").verifyContract;
      await Promise.resolve(verify(args));
    }

    //process.exit(0)
  })
  .command(
    "help, -h",
    "outputs all commands",
    { executableFile: "../help" },
    { isDefault: true }
  )
  .on("command:*", function(operands) {
    console.error(`error: unknown commands '${operands[0]}'`);
    const availableCommands = program.commands.map((cmd) => cmd.name());
    mySuggestBestMatch(operands[0], availableCommands);
    // console.log(program.helpInformation());
    // process.exit(0);
  })
  .usage("hcli command <options>");

function mySuggestBestMatch(arg, commands) {
  var message = `Did you mean?\n\n`;
  var found = false;
  commands.map((command) => {
    if (command.includes(arg)) {
      message += command + "\n";
      found = true;
    }
  });
  if (found) {
    console.log(message);
  } else {
    console.log(program.helpInformation());
  }
}
module.exports = { program };
